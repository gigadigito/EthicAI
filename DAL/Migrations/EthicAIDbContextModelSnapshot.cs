// <auto-generated />
using System;
using EthicAI.EntityModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(EthicAIDbContext))]
    partial class EthicAIDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.PreSalePurchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_purchase");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("EthicAIAmt")
                        .HasColumnType("decimal(18, 8)")
                        .HasColumnName("ethic_ai_amount");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime")
                        .HasColumnName("purchase_date");

                    b.Property<decimal>("SolAmount")
                        .HasColumnType("decimal(18, 8)")
                        .HasColumnName("sol_amount");

                    b.Property<string>("TransactionHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("transaction_hash");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("pre_sale_purchase", (string)null);
                });

            modelBuilder.Entity("DAL.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_user");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Company")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nm_company");

                    b.Property<DateTime>("DtCreate")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_create");

                    b.Property<DateTime?>("DtHumanValidation")
                        .HasColumnType("datetime")
                        .HasColumnName("dt_human_validation");

                    b.Property<DateTime>("DtUpdate")
                        .HasColumnType("datetime")
                        .HasColumnName("dt_update");

                    b.Property<string>("Email")
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)")
                        .HasColumnName("tx_email");

                    b.Property<string>("HumanCaptcha")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tx_human_captcha");

                    b.Property<string>("HumanRepresentative")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nm_human_representative");

                    b.Property<string>("IAModel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nm_ia_model");

                    b.Property<string>("IAName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nm_ia");

                    b.Property<bool?>("IsHuman")
                        .HasColumnType("bit")
                        .HasColumnName("is_human");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime")
                        .HasColumnName("dt_last_login");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nm_name");

                    b.Property<string>("Wallet")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tx_wallet");

                    b.HasKey("UserID");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("DAL.PreSalePurchase", b =>
                {
                    b.HasOne("DAL.User", "User")
                        .WithMany("PreSalePurchases")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.User", b =>
                {
                    b.Navigation("PreSalePurchases");
                });
#pragma warning restore 612, 618
        }
    }
}
