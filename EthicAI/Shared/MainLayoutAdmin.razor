@using DAL
@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject NavigationManager Navigation
@inject IJSRuntime JS
<HeadContent>
    <base href="~/" />
    <meta charset="utf-8" />
    <meta name="viewport"
          content="width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0" />

    <title>EthicAI | Control Painel</title>

    <meta name="description" content="" />

    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="/admin/assets/img/favicon/favicon.ico" />

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap"
          rel="stylesheet" />

    <!-- Icons. Uncomment required icon fonts -->
    <link rel="stylesheet" href="/admin/assets/vendor/fonts/boxicons.css" />

    <!-- Core CSS -->
    <link rel="stylesheet" href="/admin/assets/vendor/css/core.css" class="template-customizer-core-css" />
    <link rel="stylesheet" href="/admin/assets/vendor/css/theme-default.css" class="template-customizer-theme-css" />
    <link rel="stylesheet" href="/admin/assets/css/demo.css" />



    <link href="/admin/assets/css/demo.css" rel="stylesheet" />


</HeadContent>
<div class="layout-wrapper layout-content-navbar">
    <div class="layout-container">
        <!-- Menu -->

        <aside id="layout-menu" class="layout-menu menu-vertical menu bg-menu-theme">
            <div class="app-brand demo">
                <a href="/" class="app-brand-link">
                    <span class="app-brand-logo demo">
                        <img src="/img/logo.jpg" style="width:64px" />

                    </span>
                    <span class="app-brand-text demo menu-text fw-bolder ms-2">EthiCAI</span>
                </a>

                <a href="javascript:void(0);" class="layout-menu-toggle menu-link text-large ms-auto d-block d-xl-none">
                    <i class="bx bx-chevron-left bx-sm align-middle"></i>
                </a>
            </div>

            <div class="menu-inner-shadow"></div>

           <!--Human Menu-->
           <EthicAI.Pages.Human.HumanMenu></EthicAI.Pages.Human.HumanMenu>
        </aside>
        <!-- / Menu -->
        <!-- Layout container -->
        <div class="layout-page">
            <!-- Navbar -->

            <nav class="layout-navbar container-xxl navbar navbar-expand-xl navbar-detached align-items-center bg-navbar-theme"
                 id="layout-navbar">
                <div class="layout-menu-toggle navbar-nav align-items-xl-center me-3 me-xl-0 d-xl-none">
                    <a class="nav-item nav-link px-0 me-xl-4" href="javascript:void(0)">
                        <i class="bx bx-menu bx-sm"></i>
                    </a>
                </div>

                <div class="navbar-nav-right d-flex align-items-center" id="navbar-collapse">
                    <!-- Search -->
                    <div class="navbar-nav align-items-center">
                        <div class="nav-item d-flex align-items-center">
                            <i class="bx bx-search fs-4 lh-0"></i>
                            <input type="text"
                                   class="form-control border-0 shadow-none"
                                   placeholder="Search..."
                                   aria-label="Search..." />
                        </div>
                    </div>
                    <!-- /Search -->

                    <ul class="navbar-nav flex-row align-items-center ms-auto">
                        <!-- Place this tag where you want the button to render. -->
                        <li class="nav-item lh-1 me-3">
                            <a class="github-button"
                               href="https://github.com/themeselection/sneat-html-admin-template-free"
                               data-icon="octicon-star"
                               data-size="large"
                               data-show-count="true"
                               aria-label="Star themeselection/sneat-html-admin-template-free on GitHub">Star</a>
                        </li>

                        <!-- User -->
                        <li class="nav-item navbar-dropdown dropdown-user dropdown">
                            <a class="nav-link dropdown-toggle hide-arrow" href="javascript:void(0);" data-bs-toggle="dropdown">
                                <div class="avatar avatar-online">
                                    <img src="/admin/assets/img/avatars/1.png" alt class="w-px-40 h-auto rounded-circle" />
                                </div>
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li>
                                    <a class="dropdown-item" href="#">
                                        <div class="d-flex">
                                            <div class="flex-shrink-0 me-3">
                                                <div class="avatar avatar-online">
                                                    <img src="/admin/assets/img/avatars/1.png" alt class="w-px-40 h-auto rounded-circle" />
                                                </div>
                                            </div>
                                            <div class="flex-grow-1">
                                                <span class="fw-semibold d-block">@@userName</span>
                                                <small class="text-muted">Human</small>
                                            </div>
                                        </div>
                                    </a>
                                </li>
                                <li>
                                    <div class="dropdown-divider"></div>
                                </li>
                                <li>
                                    <a class="dropdown-item" href="#">
                                        <i class="bx bx-user me-2"></i>
                                        <span class="align-middle">My Profile</span>
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item" href="#">
                                        <i class="bx bx-cog me-2"></i>
                                        <span class="align-middle">Settings</span>
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item" href="#">
                                        <span class="d-flex align-items-center align-middle">
                                            <i class="flex-shrink-0 bx bx-credit-card me-2"></i>
                                            <span class="flex-grow-1 align-middle">Billing</span>
                                            <span class="flex-shrink-0 badge badge-center rounded-pill bg-danger w-px-20 h-px-20">4</span>
                                        </span>
                                    </a>
                                </li>
                                <li>
                                    <div class="dropdown-divider"></div>
                                </li>
                                <li>
                                    <a class="dropdown-item" href="auth-login-basic.html">
                                        <i class="bx bx-power-off me-2"></i>
                                        <span class="align-middle">Log Out</span>
                                    </a>
                                </li>
                            </ul>
                        </li>
                        <!--/ User -->
                    </ul>
                </div>
            </nav>
 @Body

        </div>
        <!-- / Layout page -->
    </div>

    <!-- Overlay -->
    <div class="layout-overlay layout-menu-toggle"></div>
</div>

<div class="buy-now">
    <a href="https://themeselection.com/products/sneat-bootstrap-html-admin-template/"
       target="_blank"
       class="btn btn-danger btn-buy-now">Upgrade to Pro</a>
</div>
<!-- / Layout wrapper -->
 <script>
    function carregarScriptsAdmin() {
        var pastaScripts = 'assets/';

        var scripts = [
            '/admin/assets/vendor/libs/jquery/jquery.js',
            '/admin/assets/vendor/libs/popper/popper.js',
            '/admin/assets/vendor/js/bootstrap.js',
            '/admin/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js',
            '/admin/assets/vendor/js/helpers.js', // helpers.js antes do menu.js
            '/admin/assets/vendor/js/menu.js',    // menu.js antes do main.js
            '/admin/assets/vendor/libs/apex-charts/apexcharts.js',
            '/admin/assets/js/config.js',         // config.js antes do main.js
            '/admin/assets/js/main.js',
            '/admin/assets/js/dashboards-analytics.js'
        ];

        function loadScript(index) {
            if (index < scripts.length) {
                var scriptElement = document.createElement('script');
                scriptElement.src = scripts[index];

                scriptElement.onload = function () {
                    // Carrega o próximo script após o atual ser carregado
                    loadScript(index + 1);
                };

                document.head.appendChild(scriptElement);
            }
        }

        // Iniciar o carregamento do primeiro script
        loadScript(0);
    }


 </script>
<!-- Core JS -->

<!-- Place this tag in your head or just before your close body tag. -->
<script async defer src="https://buttons.github.io/buttons.js"></script>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Chama o método JavaScript para carregar os scripts
            await JS.InvokeVoidAsync("carregarScriptsAdmin");
        }
    }
}

@code{

    private bool isUserHumanHasName = false;
    private bool isUserChouseRace = false;
    private string NmUser = "";
    private string Wallet = "";
    private async Task HandleUpdateMainLayout()
    {
        try
        {
            var storedUser = await sessionStorage.GetItemAsync<User>("User");

            if (storedUser != null)
            {
                isUserChouseRace = (storedUser.IsHuman != null);
                isUserHumanHasName = (storedUser.Name != null && !String.IsNullOrEmpty(storedUser.Name)) && storedUser.IsHuman == true;
                var isUserMachineHasName = (storedUser.IAName != null && !String.IsNullOrEmpty(storedUser.IAName)) && storedUser.IsHuman == false;

                if (isUserHumanHasName)
                {
                    NmUser = storedUser.Name;
                }

                if (isUserMachineHasName)
                {
                    NmUser = storedUser.IAName;
                }
                
                
                Wallet = storedUser.Wallet;

                if(storedUser.IsHuman == null)
                {
                    Navigation.NavigateTo("/Capcha");
                }
                if (!isUserHumanHasName && storedUser.IsHuman == true)
                {
                    Navigation.NavigateTo("/UserInfo");
                }
                if (!isUserMachineHasName && storedUser.IsHuman == false)
                {
                    Navigation.NavigateTo("/UserInfo");
                }

                if(storedUser.IsHuman == true)
                {
                    Navigation.NavigateTo("/Human/HumanAdminPainel");
                }

                if (storedUser.IsHuman == false)
                {
                    Navigation.NavigateTo("/Machine/MachineAdminPainel");
                }

                StateHasChanged();
            }
        }
        catch (Exception)
        {


        }


    }
    protected override async Task OnInitializedAsync()
    {


        try
        {
        var storedUser = await sessionStorage.GetItemAsync<User>("User");

        if (storedUser != null)
        {
            isUserChouseRace = (storedUser.IsHuman != null);
            isUserHumanHasName = (storedUser.Name != null && !String.IsNullOrEmpty(storedUser.Name));
            NmUser = storedUser.Name;
            Wallet = storedUser.Wallet;
           
        }
        }
        catch (Exception)
        {


        }
    }
   
   
}