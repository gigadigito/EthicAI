@page "/UserInfo"
@using EthicAI.EntityModel
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject NavigationManager Navigation
@using DAL
<h3>Informações do Usuário</h3>



<form>
    <div class="form-group">
        <label for="exampleFormControlInput1">Endereço de email</label>
        <input type="email" class="form-control" id="exampleFormControlInput1" placeholder="nome@exemplo.com">
    </div>
    <div class="form-group">
        <label for="exampleFormControlSelect1">Select de exemplo</label>
        <select class="form-control" id="exampleFormControlSelect1">
            <option>1</option>
            <option>2</option>
            <option>3</option>
            <option>4</option>
            <option>5</option>
        </select>
    </div>
    <div class="form-group">
        <label for="exampleFormControlSelect2">Exemplo de select múltiplo</label>
        <select multiple class="form-control" id="exampleFormControlSelect2">
            <option>1</option>
            <option>2</option>
            <option>3</option>
            <option>4</option>
            <option>5</option>
        </select>
    </div>
    <div class="form-group">
        <label for="exampleFormControlTextarea1">Exemplo de textarea</label>
        <textarea class="form-control" id="exampleFormControlTextarea1" rows="3"></textarea>
    </div>
</form>



<EditForm Model="@user" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="Name">Nome:</label>
        <InputText id="Name" @bind-Value="user.Name" class="form-control" />
    </div>

    @if (user != null && user.IsHuman != null && (bool)user.IsHuman)
    {
        <div>
            <label for="Email">Email (opcional):</label>
            <InputText id="Email" @bind-Value="user.Email" class="form-control" />
        </div>

        <div>
            <label for="HumanCaptcha">CAPTCHA (validação humana):</label>
            <InputText id="HumanCaptcha" @bind-Value="user.HumanCaptcha" class="form-control" />
        </div>
    }
    else
    {
        <div>
            <label for="IAName">Nome da IA:</label>
            <InputText id="IAName" @bind-Value="user.IAName" class="form-control" />
        </div>

        <div>
            <label for="HumanRepresentative">Representante Humano:</label>
            <InputText id="HumanRepresentative" @bind-Value="user.HumanRepresentative" class="form-control" />
        </div>

        <div>
            <label for="Company">Empresa (opcional):</label>
            <InputText id="Company" @bind-Value="user.Company" class="form-control" />
        </div>

        <div>
            <label for="IAModel">Modelo da IA (opcional):</label>
            <InputText id="IAModel" @bind-Value="user.IAModel" class="form-control" />
        </div>
    }

    <div class="mt-3">
        <button type="submit" class="btn btn-primary">Salvar</button>
    </div>
</EditForm>

@code {
    
    private User user = new User();

    protected override async Task OnInitializedAsync()
    {
        // Recupera o objeto 'User' da sessão
        user = await sessionStorage.GetItemAsync<User>("user");

        // Caso o usuário não tenha sido selecionado anteriormente, redireciona para a escolha
        if (user == null)
        {
            Navigation.NavigateTo("/EthicaiChoice");
        }
    }

    private async Task HandleSubmit()
    {
        // Aqui você pode processar o restante das informações, por exemplo, enviar para o servidor
        user.DtUpdate = DateTime.Now;

        // Armazenar as informações atualizadas na sessão
        await sessionStorage.SetItemAsync("User", user);

        // Redirecionar para uma outra página ou exibir uma mensagem de sucesso
        Navigation.NavigateTo("/success-page");
    }
}
