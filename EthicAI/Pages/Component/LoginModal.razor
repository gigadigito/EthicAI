@inject IJSRuntime JS
@using Ethereum.MetaMask.Blazor;
@using Microsoft.AspNetCore.Components
@using NFT_JOGO
@using NFT_JOGO.Data
@using NFT_JOGO.EntityModel

@inject IMetaMaskService MetaMaskService
@inject IMetaMaskService MetaMaskService
@inject IConfiguration Configuration
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
<div class="nk-modal modal fade" id="modalLogin" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-body">

                @if (String.IsNullOrEmpty(CarteiraUsuario))
                {

                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span class="ion-android-close"></span>
                    </button>

                    <h4 class="mb-0"><span class="text-main-1">Conectar</span> Carteira</h4>

                    <div class="nk-gap-1"></div>
                    <form action="#" class="nk-form text-white">
                        <div class="row vertical-gap">
                            <div class="col-md-6">
                                @*   Use email and password:

                            <div class="nk-gap"></div>
                            <input type="email" value="" name="email" class=" form-control" placeholder="Email">

                            <div class="nk-gap"></div>
                            <input type="password" value="" name="password" class="required form-control" placeholder="Password"> *@
                            </div>
                            <div class="col-md-6">
                                @*   Or social account:

                            <div class="nk-gap"></div>

                            <ul class="nk-social-links-2">
                            <li><a class="nk-social-facebook" href="#"><span class="fab fa-facebook"></span></a></li>
                            <li><a class="nk-social-google-plus" href="#"><span class="fab fa-google-plus"></span></a></li>
                            <li><a class="nk-social-twitter" href="#"><span class="fab fa-twitter"></span></a></li>
                            </ul> *@
                            </div>
                        </div>

                        <div class="nk-gap-1"></div>
                        <div class="row vertical-gap">
                            <div class="col-md-6">
                                <a href="#" @onclick="RequestAuthorization" class="nk-btn nk-btn-rounded nk-btn-color-white nk-btn-block">Conectar Metamask</a>
                            </div>
                            <div class="col-md-6">
                                @*  <div class="mnt-5">
                            <small><a href="#">Forgot your password?</a></small>
                            </div>
                            <div class="mnt-5">
                            <small><a href="#">Not a member? Sign up</a></small>
                            </div> *@
                            </div>
                        </div>
                    </form>
                }
                else
                {
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span class="ion-android-close"></span>
                    </button>

                    <h4 class="mb-0"><span class="text-main-1">Bem-vindo </span> @NomeUsuario</h4>

                    <h5 class="mb-0" style="margin-top:5px">Obrigado por nos ajudar na luta contra as maquinas IA! </h5>
                    <form action="#" class="nk-form text-white">
                        <div class="row vertical-gap">
                            <div class="col-md-6">
                                
                                @if (String.IsNullOrEmpty(NomeUsuario))
                                {
                                    <div class="nk-gap">Informe seu nome de usuário</div>
                                    <div class="nk-gap"></div>
                                    <input type="text" @bind="NomeUsuario" name="user" class=" form-control" placeholder="Nome de usuário / apelido">
                                }

                                @*   Use email and password:

                            <div class="nk-gap"></div>
                            <input type="password" value="" name="password" class="required form-control" placeholder="Password"> *@

                            </div>
                            <div class="col-md-12">
                                   Seu Saldo em ETCAI: 0,00000.00000

                                 <div class="nk-gap">@CarteiraUsuario</div>

                                  @* <ul class="nk-social-links-2">
                                <li><a class="nk-social-facebook" href="#"><span class="fab fa-facebook"></span></a></li>
                                <li><a class="nk-social-google-plus" href="#"><span class="fab fa-google-plus"></span></a></li>
                                <li><a class="nk-social-twitter" href="#"><span class="fab fa-twitter"></span></a></li>
                                </ul> *@
                            </div>
                        </div>
                   </form>
                }
            </div>
        </div>
    </div>
</div>

@code {

    public string CarteiraUsuario { get; set; }
    public string NomeUsuario { get; set; }

    private async Task RequestAuthorization()
    {

        var accounts = await MetaMaskService.ConnectAsync();

        // Faça algo com os endereços de conta, se necessário

        CarteiraUsuario = accounts;

        UsuarioService objService = new UsuarioService(Configuration);

        var User = await objService.GetUsuarioByWallet(CarteiraUsuario);

        if (User == null)
        {
            //  =====  Usuário não cadastrado.
            var objUser = new Usuario();

            objUser.CarteiraEndereco = CarteiraUsuario;
            objUser.DataAtualizacao = DateTime.Now;
            objUser.NomeJogador = "GigaDigito@Teste";

            var Result = await objService.AddUsuario(objUser);

            if (Result == "OK")
            {
                var teste = 1;
            }

        }
        else
        {
            //loga o usuário.

            await sessionStorage.SetItemAsync("Usuario", User);

            var objUsurio = await sessionStorage.GetItemAsync<Usuario>("Usuario");
        }

    }
    protected override async Task OnAfterRenderAsync(bool teste)
    {
        // load the Categories (example)

        var objUsurio = await sessionStorage.GetItemAsync<Usuario>("Usuario");

        if(objUsurio != null)
        {
            CarteiraUsuario = objUsurio.CarteiraEndereco;
            NomeUsuario = objUsurio.NomeJogador;

            StateHasChanged();
        }
    }
}