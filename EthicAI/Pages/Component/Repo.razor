@inject IJSRuntime JS
@inject GitHubService GitHubService
@inject BLL.SecretManager secretManager

<h3 class="nk-decorated-h-2"><span><span class="text-main-1">Latest dev</span> News</span></h3>
<div class="nk-gap"></div>

<div class="nk-news-box">
    <div class="nk-news-box-list">
        <div class="nano">
            <div class="nano-content">
                @if (commits != null)
                {
                    @foreach (var commit in commits)
                    {
                        <div class="nk-news-box-item @((commit == selectedCommit ? "nk-news-box-item-active" : ""))"
                             @onclick="() => SelectCommit(commit)">
                            <div class="nk-news-box-item-img">
                                <img src="@commit.Author.Avatar_Url" alt="Commit image">
                            </div>
                            <h3 class="nk-news-box-item-title">
                                @if (commit.Commit.Message.Length > 30)
                                {
                                    @($"{commit.Commit.Message.Substring(0, 30)}...")
                                }
                                else
                                {
                                    @commit.Commit.Message
                                }
                            </h3>

                            <span class="nk-news-box-item-categories">
                                <span class="bg-main-4">Commit</span>
                            </span>

                            <div class="nk-news-box-item-text">
                                <p>@commit.Commit.Message</p>
                            </div>

                            <a href="@commit.Html_Url" class="nk-news-box-item-url" target="_blank">Read More</a>

                            <div class="nk-news-box-item-date">
                                <span class="fa fa-calendar"></span> @commit.Commit.Author.Date.ToString("MMM dd, yyyy")
                            </div>

                            <div class="nk-news-box-item-author">
                                <span class="fa fa-user"></span> @commit.Author.Login
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p>Carregando commits...</p>
                }
            </div>
        </div>
    </div>

    <div class="nk-news-box-each-info">
        @if (selectedCommit != null)
        {
            <div class="nano">
                <div class="nano-content" id="nano-content">
                    <!-- Informações sobre o commit selecionado -->
                    <div class="nk-news-box-item-image">
                        <img src="@selectedCommit.Author.Avatar_Url" alt="Selected commit image">
                        <span class="nk-news-box-item-categories">
                            <span class="bg-main-4">Commit</span>
                        </span>
                    </div>
                    <h3 id="commit-details-title" class="nk-news-box-item-title">
                        @if (selectedCommit.Commit.Message.Length > 30)
                        {
                            @($"{selectedCommit.Commit.Message.Substring(0, 30)}...")
                        }
                        else
                        {
                            @selectedCommit.Commit.Message
                        }
                    </h3>
                    <div class="nk-news-box-item-text">
                        <p>@selectedCommit.Commit.Message</p>
                    </div>
                    <a href="@selectedCommit.Html_Url" class="nk-news-box-item-more" target="_blank">Read More</a>
                    <div class="nk-news-box-item-date">
                        <span class="fa fa-calendar"></span> @selectedCommit.Commit.Author.Date.ToString("MMM dd, yyyy")
                    </div>
                </div>
            </div>
        }
        else
        {
            <p>Select a commit to view details</p>
        }
    </div>
</div>

@code {
    private List<GitHubCommit> commits;
    private GitHubCommit selectedCommit;

    protected override async Task OnInitializedAsync()
    {
        string owner = "gigadigito";
        string repo = "EthicAI";
        var token = secretManager.GetSecret("GitHubToken");
        commits = await GitHubService.GetCommitsFromAllBranchesAsync(owner, repo, token);
        if (commits != null && commits.Any())
        {
            selectedCommit = commits.First(); // Seleciona o primeiro commit por padrão
        }
    }

    private async Task SelectCommit(GitHubCommit commit)
    {
        selectedCommit = commit;
        await JS.InvokeVoidAsync("scrollToElementInContainer", "nano-content", "commit-details-title");
    }
}
