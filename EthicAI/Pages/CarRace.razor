@page "/Carrace"
@inject IJSRuntime JS
@using Ethereum.MetaMask.Blazor;
@using Microsoft.AspNetCore.Components
@using EthicAI
@using EthicAI.Data
@using EthicAI.EntityModel
<PageTitle>Counter</PageTitle>
@inject IMetaMaskService MetaMaskService
@inject IMetaMaskService MetaMaskService
@inject IConfiguration Configuration

<h3>MetaMask Integration with Blazor</h3>

<button @onclick="RequestAuthorization">Request Authorization</button>

<h1>
    @CarteiraUsuario
</h1>

@code {

    public string CarteiraUsuario { get; set; }

    private async Task RequestAuthorization()
    {

        var accounts = await MetaMaskService.ConnectAsync();

        // Faça algo com os endereços de conta, se necessário

        CarteiraUsuario = accounts;

        UserService objService = new UserService(Configuration);

        var User = await objService.GetUserByWallet(CarteiraUsuario);

        if(User == null)
        {
            //  =====  Usuário não cadastrado.
            var objUser = new User();

            objUser.Wallet = CarteiraUsuario;
            objUser.DtUpdate = DateTime.Now;
            objUser.Name = "GigaDigito@Teste";

            var Result = await objService.AddUser(objUser);

            if (Result == "OK")
            {
               var teste = 1;
            }

        }

    }
}
